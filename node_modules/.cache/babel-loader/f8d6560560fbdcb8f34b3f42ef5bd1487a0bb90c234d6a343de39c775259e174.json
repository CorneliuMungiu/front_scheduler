{"ast":null,"code":"var _jsxFileName = \"/home/cornel/client/src/App.js\",\n  _s = $RefreshSig$();\n// import './App.css';\n// import { useSession, useSupabaseClient , useSessionContext } from '@supabase/auth-helpers-react';\n// import DateTimePicker from 'react-datetime-picker';\n// import { useState } from 'react';\n// import 'react-calendar/dist/Calendar.css';\n// import 'react-clock/dist/Clock.css';\n// import 'react-datetime-picker/dist/DateTimePicker.css';\n\n// function App() {\n//   const [start, setStart] = useState(new Date());\n//   const [end, setEnd] = useState(new Date());\n//   const [eventName, setEventName] = useState(\"\");\n//   const [eventDescription, setEventDescription] = useState(\"\");\n\n//   const session = useSession();\n//   const supabase = useSupabaseClient();\n//   const { isLoading } = useSessionContext();\n\n//   if (isLoading) {\n//     return <></>;\n//   }\n\n//   async function googleSignIn() {\n//     const { error } = await supabase.auth.signInWithOAuth({\n//       provider: 'google',\n//       options: {\n//         scopes: 'https://www.googleapis.com/auth/calendar'\n//       }\n//     });\n//     if (error) {\n//       alert(\"Error logging into Google\");\n//       console.log(error);\n//     }\n//   }\n\n// async function signOut() {\n//   await supabase.auth.signOut();\n// }\n\n//   async function createCalendarEvent(){\n//     const event = {\n//       'summary' : eventName,\n//       'description' : eventDescription,\n//       'start' : {\n//         'dateTime' : start.toISOString(),\n//         'timeZone' : Intl.DateTimeFormat().resolvedOptions().timeZone\n//       },\n//       'end' : {\n//         'dateTime' : end.toISOString(),\n//         'timeZone' : Intl.DateTimeFormat().resolvedOptions().timeZone\n//       },\n//     }\n//     await fetch(\"https://www.googleapis.com/calendar/v3/calendars/primary/events\", {\n//       method : \"POST\",\n//       headers : {\n//         'Authorization' : 'Bearer ' + session.provider_token\n//       },\n//       body : JSON.stringify(event)\n//     }).then((data) => {\n//       return data.json();\n//     }).then((data) => {\n//       console.log(data);\n//     })\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"card\">\n//         {session ? (\n//           <>\n//             <h2>{session.user.email}</h2>\n//             <p>Start of your event</p>\n//             <div className=\"datetime-picker\">\n//               <DateTimePicker onChange={setStart} value={start} />\n//             </div>\n//             <p>End of your event</p>\n//             <div className=\"datetime-picker\">\n//               <DateTimePicker onChange={setEnd} value={end} />\n//             </div>\n//             <p>Event name</p>\n//             <div className=\"datetime-picker\">\n//               <input type='text' onChange={(e) => setEventName(e.target.value)}></input>\n//             </div>\n//             <p>Event Description</p>\n//             <div className=\"datetime-picker\">\n//               <input type='text' onChange={(e) => setEventDescription(e.target.value)}></input>\n//             </div>\n//             <hr/>\n//             <button onClick={() => createCalendarEvent()}>Create Calendar Event</button>\n//             <p></p>\n//             <button onClick={signOut}>Sign Out</button>\n//           </>\n//         ) : (\n//           <>\n//             <h2>Welcome!</h2>\n//             <p>Please sign in with Google to continue</p>\n//             <button onClick={googleSignIn}>Sign In with Google</button>\n//           </>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport './App.css';\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react';\nimport DateTimePicker from 'react-datetime-picker';\nimport { useState, useEffect } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-clock/dist/Clock.css';\nimport 'react-datetime-picker/dist/DateTimePicker.css';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [start, setStart] = useState(new Date());\n  const [end, setEnd] = useState(new Date());\n  const [eventName, setEventName] = useState(\"\");\n  const [attendeeEmails, setAttendeeEmails] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\");\n  const [events, setEvents] = useState([]);\n  const [isCreating, setIsCreating] = useState(false);\n  const [editingEvent, setEditingEvent] = useState(null);\n  const session = useSession();\n  const supabase = useSupabaseClient();\n  const {\n    isLoading\n  } = useSessionContext();\n  const [isUserCreated, setIsUserCreated] = useState(false);\n  useEffect(() => {\n    // Verificăm dacă utilizatorul este autentificat și nu a fost creat deja\n    const createUserIfNeeded = async () => {\n      if (session && !isUserCreated) {\n        const response = await fetch('http://127.0.0.1:5000/create_user', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: session.user.email\n          }) // Trimitem email-ul utilizatorului\n        });\n        const data = await response.json();\n        if (response.ok) {\n          if (data.message === 'User created successfully!') {\n            console.log('User created successfully!');\n            setIsUserCreated(true); // Setăm că utilizatorul a fost creat\n          } else if (data.message === 'User already exists') {\n            console.log('User already exists!');\n          }\n        } else {\n          console.error('Failed to create user on backend', data);\n        }\n      }\n    };\n    createUserIfNeeded();\n  }, [session, isUserCreated]);\n\n  // Funcție pentru a prelua evenimentele\n  const fetchEvents = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('events').select('*').eq('user_id', session.user.id);\n    if (error) {\n      console.error(\"Error fetching events:\", error);\n    } else {\n      setEvents(data);\n    }\n  };\n  useEffect(() => {\n    if (session) {\n      fetchEvents();\n    }\n  }, [session]);\n  const createEvent = async () => {\n    const event = {\n      title: eventName,\n      description: eventDescription,\n      start_time: start.toISOString(),\n      end_time: end.toISOString(),\n      organizer_id: session.user.id,\n      // Folosim id-ul utilizatorului pentru organizer\n      attendees: attendeeEmails.split(',').map(email => email.trim()) // Separăm emailurile și le trimitem ca listă\n    };\n    try {\n      // Apelul către backend pentru a crea evenimentul\n      const response = await fetch('http://127.0.0.1:5000/events', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(event)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setEvents([...events, data.event]); // Adaugă evenimentul la lista de evenimente\n        setIsCreating(false);\n        resetForm();\n      } else {\n        alert('Error creating event');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Error creating event');\n    }\n  };\n  const deleteEvent = async id => {\n    const {\n      error\n    } = await supabase.from('events').delete().eq('id', id);\n    if (error) {\n      alert('Error deleting event');\n    } else {\n      setEvents(events.filter(event => event.id !== id));\n    }\n  };\n  const editEvent = event => {\n    setEditingEvent(event);\n    setStart(new Date(event.start_time));\n    setEnd(new Date(event.end_time));\n    setEventName(event.title);\n    setEventDescription(event.description);\n    setAttendeeEmails(event.attendees.join(',')); // Convertim lista de participanți într-un string cu virgule\n    setIsCreating(true); // Schimbăm modul în editare\n  };\n  const updateEvent = async () => {\n    const updatedEvent = {\n      id: editingEvent.id,\n      title: eventName,\n      description: eventDescription,\n      start_time: start.toISOString(),\n      end_time: end.toISOString(),\n      organizer_id: session.user.id,\n      attendees: attendeeEmails.split(',').map(email => email.trim())\n    };\n    const {\n      data,\n      error\n    } = await supabase.from('events').update(updatedEvent).eq('id', editingEvent.id);\n    if (error) {\n      alert('Error updating event');\n    } else {\n      setEvents(events.map(event => event.id === editingEvent.id ? data[0] : event));\n      setEditingEvent(null);\n      setIsCreating(false);\n      resetForm();\n    }\n  };\n  const resetForm = () => {\n    setStart(new Date());\n    setEnd(new Date());\n    setEventName('');\n    setEventDescription('');\n    setAttendeeEmails('');\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: session ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: session.user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"events-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Upcoming Events\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"events-buttons\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsCreating(true),\n              children: \"Create Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-list\",\n            children: events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: event.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: event.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [new Date(event.start_time).toLocaleString(), \" - \", new Date(event.end_time).toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => editEvent(event),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteEvent(event.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 21\n              }, this)]\n            }, event.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), isCreating && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-event-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: editingEvent ? \"Edit Event\" : \"Create Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Start of your event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n            onChange: setStart,\n            value: start\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"End of your event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n            onChange: setEnd,\n            value: end\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Event title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: eventName,\n            onChange: e => setEventName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Event Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: eventDescription,\n            onChange: e => setEventDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Attendees (comma-separated emails)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: attendeeEmails,\n            onChange: e => setAttendeeEmails(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: editingEvent ? updateEvent : createEvent,\n            children: editingEvent ? \"Update\" : \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsCreating(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: signOut,\n          children: \"Sign Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please sign in with Google to continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: googleSignIn,\n          children: \"Sign In with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n  async function googleSignIn() {\n    const {\n      error\n    } = await supabase.auth.signInWithOAuth({\n      provider: 'google',\n      options: {\n        scopes: 'https://www.googleapis.com/auth/calendar'\n      }\n    });\n    if (error) {\n      alert('Error logging into Google');\n      console.log(error);\n    }\n  }\n  async function signOut() {\n    await supabase.auth.signOut();\n  }\n}\n_s(App, \"bfgvcXqur/7quFOje8nRjPuDCa8=\", false, function () {\n  return [useSession, useSupabaseClient, useSessionContext];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useSession","useSupabaseClient","useSessionContext","DateTimePicker","useState","useEffect","Fragment","_Fragment","jsxDEV","_jsxDEV","App","_s","start","setStart","Date","end","setEnd","eventName","setEventName","attendeeEmails","setAttendeeEmails","eventDescription","setEventDescription","events","setEvents","isCreating","setIsCreating","editingEvent","setEditingEvent","session","supabase","isLoading","isUserCreated","setIsUserCreated","createUserIfNeeded","response","fetch","method","headers","body","JSON","stringify","email","user","data","json","ok","message","console","log","error","fetchEvents","from","select","eq","id","createEvent","event","title","description","start_time","toISOString","end_time","organizer_id","attendees","split","map","trim","resetForm","alert","deleteEvent","delete","filter","editEvent","join","updateEvent","updatedEvent","update","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toLocaleString","onChange","value","type","e","target","signOut","googleSignIn","auth","signInWithOAuth","provider","options","scopes","_c","$RefreshReg$"],"sources":["/home/cornel/client/src/App.js"],"sourcesContent":["// import './App.css';\n// import { useSession, useSupabaseClient , useSessionContext } from '@supabase/auth-helpers-react';\n// import DateTimePicker from 'react-datetime-picker';\n// import { useState } from 'react';\n// import 'react-calendar/dist/Calendar.css';\n// import 'react-clock/dist/Clock.css';\n// import 'react-datetime-picker/dist/DateTimePicker.css';\n\n\n// function App() {\n//   const [start, setStart] = useState(new Date());\n//   const [end, setEnd] = useState(new Date());\n//   const [eventName, setEventName] = useState(\"\");\n//   const [eventDescription, setEventDescription] = useState(\"\");\n\n//   const session = useSession();\n//   const supabase = useSupabaseClient();\n//   const { isLoading } = useSessionContext();\n\n//   if (isLoading) {\n//     return <></>;\n//   }\n\n//   async function googleSignIn() {\n//     const { error } = await supabase.auth.signInWithOAuth({\n//       provider: 'google',\n//       options: {\n//         scopes: 'https://www.googleapis.com/auth/calendar'\n//       }\n//     });\n//     if (error) {\n//       alert(\"Error logging into Google\");\n//       console.log(error);\n//     }\n//   }\n\n  // async function signOut() {\n  //   await supabase.auth.signOut();\n  // }\n\n//   async function createCalendarEvent(){\n//     const event = {\n//       'summary' : eventName,\n//       'description' : eventDescription,\n//       'start' : {\n//         'dateTime' : start.toISOString(),\n//         'timeZone' : Intl.DateTimeFormat().resolvedOptions().timeZone\n//       },\n//       'end' : {\n//         'dateTime' : end.toISOString(),\n//         'timeZone' : Intl.DateTimeFormat().resolvedOptions().timeZone\n//       },\n//     }\n//     await fetch(\"https://www.googleapis.com/calendar/v3/calendars/primary/events\", {\n//       method : \"POST\",\n//       headers : {\n//         'Authorization' : 'Bearer ' + session.provider_token\n//       },\n//       body : JSON.stringify(event)\n//     }).then((data) => {\n//       return data.json();\n//     }).then((data) => {\n//       console.log(data);\n//     })\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"card\">\n//         {session ? (\n//           <>\n//             <h2>{session.user.email}</h2>\n//             <p>Start of your event</p>\n//             <div className=\"datetime-picker\">\n//               <DateTimePicker onChange={setStart} value={start} />\n//             </div>\n//             <p>End of your event</p>\n//             <div className=\"datetime-picker\">\n//               <DateTimePicker onChange={setEnd} value={end} />\n//             </div>\n//             <p>Event name</p>\n//             <div className=\"datetime-picker\">\n//               <input type='text' onChange={(e) => setEventName(e.target.value)}></input>\n//             </div>\n//             <p>Event Description</p>\n//             <div className=\"datetime-picker\">\n//               <input type='text' onChange={(e) => setEventDescription(e.target.value)}></input>\n//             </div>\n//             <hr/>\n//             <button onClick={() => createCalendarEvent()}>Create Calendar Event</button>\n//             <p></p>\n//             <button onClick={signOut}>Sign Out</button>\n//           </>\n//         ) : (\n//           <>\n//             <h2>Welcome!</h2>\n//             <p>Please sign in with Google to continue</p>\n//             <button onClick={googleSignIn}>Sign In with Google</button>\n//           </>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\n\nimport './App.css';\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react';\nimport DateTimePicker from 'react-datetime-picker';\nimport { useState, useEffect } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-clock/dist/Clock.css';\nimport 'react-datetime-picker/dist/DateTimePicker.css';\n\nfunction App() {\n  const [start, setStart] = useState(new Date());\n  const [end, setEnd] = useState(new Date());\n  const [eventName, setEventName] = useState(\"\");\n  const [attendeeEmails, setAttendeeEmails] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\");\n  const [events, setEvents] = useState([]);\n  const [isCreating, setIsCreating] = useState(false);\n  const [editingEvent, setEditingEvent] = useState(null);\n\n  const session = useSession();\n  const supabase = useSupabaseClient();\n  const { isLoading } = useSessionContext();\n\n  const [isUserCreated, setIsUserCreated] = useState(false);\n\n  useEffect(() => {\n    // Verificăm dacă utilizatorul este autentificat și nu a fost creat deja\n    const createUserIfNeeded = async () => {\n      if (session && !isUserCreated) {\n        const response = await fetch('http://127.0.0.1:5000/create_user', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ email: session.user.email }),  // Trimitem email-ul utilizatorului\n        });\n\n        const data = await response.json();\n\n        if (response.ok) {\n          if (data.message === 'User created successfully!') {\n            console.log('User created successfully!');\n            setIsUserCreated(true); // Setăm că utilizatorul a fost creat\n          } else if (data.message === 'User already exists') {\n            console.log('User already exists!');\n          }\n        } else {\n          console.error('Failed to create user on backend', data);\n        }\n      }\n    };\n\n    createUserIfNeeded();\n  }, [session, isUserCreated]);\n\n  // Funcție pentru a prelua evenimentele\n  const fetchEvents = async () => {\n    const { data, error } = await supabase\n      .from('events')\n      .select('*')\n      .eq('user_id', session.user.id);\n    if (error) {\n      console.error(\"Error fetching events:\", error);\n    } else {\n      setEvents(data);\n    }\n  };\n\n  useEffect(() => {\n    if (session) {\n      fetchEvents();\n    }\n  }, [session]);\n\n  const createEvent = async () => {\n    const event = {\n      title: eventName,\n      description: eventDescription,\n      start_time: start.toISOString(),\n      end_time: end.toISOString(),\n      organizer_id: session.user.id,  // Folosim id-ul utilizatorului pentru organizer\n      attendees: attendeeEmails.split(',').map(email => email.trim())  // Separăm emailurile și le trimitem ca listă\n    };\n\n    try {\n      // Apelul către backend pentru a crea evenimentul\n      const response = await fetch('http://127.0.0.1:5000/events', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(event),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setEvents([...events, data.event]);  // Adaugă evenimentul la lista de evenimente\n        setIsCreating(false);\n        resetForm();\n      } else {\n        alert('Error creating event');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Error creating event');\n    }\n  };\n\n  const deleteEvent = async (id) => {\n    const { error } = await supabase\n      .from('events')\n      .delete()\n      .eq('id', id);\n\n    if (error) {\n      alert('Error deleting event');\n    } else {\n      setEvents(events.filter(event => event.id !== id));\n    }\n  };\n\n  const editEvent = (event) => {\n    setEditingEvent(event);\n    setStart(new Date(event.start_time));\n    setEnd(new Date(event.end_time));\n    setEventName(event.title);\n    setEventDescription(event.description);\n    setAttendeeEmails(event.attendees.join(',')); // Convertim lista de participanți într-un string cu virgule\n    setIsCreating(true); // Schimbăm modul în editare\n  };\n\n  const updateEvent = async () => {\n    const updatedEvent = {\n      id: editingEvent.id,\n      title: eventName,\n      description: eventDescription,\n      start_time: start.toISOString(),\n      end_time: end.toISOString(),\n      organizer_id: session.user.id,\n      attendees: attendeeEmails.split(',').map(email => email.trim())\n    };\n\n    const { data, error } = await supabase\n      .from('events')\n      .update(updatedEvent)\n      .eq('id', editingEvent.id);\n\n    if (error) {\n      alert('Error updating event');\n    } else {\n      setEvents(events.map((event) =>\n        event.id === editingEvent.id ? data[0] : event\n      ));\n      setEditingEvent(null);\n      setIsCreating(false);\n      resetForm();\n    }\n  };\n\n  const resetForm = () => {\n    setStart(new Date());\n    setEnd(new Date());\n    setEventName('');\n    setEventDescription('');\n    setAttendeeEmails('');\n  };\n\n  if (isLoading) {\n    return <></>;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"card\">\n        {session ? (\n          <>\n            <h2>{session.user.email}</h2>\n            <div className=\"events-section\">\n              <h3>Upcoming Events</h3>\n              <div className=\"events-buttons\">\n                <button onClick={() => setIsCreating(true)}>Create Event</button>\n              </div>\n              <div className=\"event-list\">\n                {events.map(event => (\n                  <div key={event.id} className=\"event-card\">\n                    <h4>{event.title}</h4>\n                    <p>{event.description}</p>\n                    <p>{new Date(event.start_time).toLocaleString()} - {new Date(event.end_time).toLocaleString()}</p>\n                    <button onClick={() => editEvent(event)}>Edit</button>\n                    <button onClick={() => deleteEvent(event.id)}>Delete</button>\n                  </div>\n                ))}\n              </div>\n            </div>\n            {isCreating && (\n              <div className=\"create-event-form\">\n                <h3>{editingEvent ? \"Edit Event\" : \"Create Event\"}</h3>\n                <p>Start of your event</p>\n                <DateTimePicker onChange={setStart} value={start} />\n                <p>End of your event</p>\n                <DateTimePicker onChange={setEnd} value={end} />\n                <p>Event title</p>\n                <input \n                  type=\"text\" \n                  value={eventName} \n                  onChange={(e) => setEventName(e.target.value)} \n                />\n                <p>Event Description</p>\n                <input \n                  type=\"text\" \n                  value={eventDescription} \n                  onChange={(e) => setEventDescription(e.target.value)} \n                />\n                <p>Attendees (comma-separated emails)</p>\n                <input \n                  type=\"text\" \n                  value={attendeeEmails} \n                  onChange={(e) => setAttendeeEmails(e.target.value)} \n                />\n                <button onClick={editingEvent ? updateEvent : createEvent}>\n                  {editingEvent ? \"Update\" : \"Create\"}\n                </button>\n                <button onClick={() => setIsCreating(false)}>Cancel</button>\n              </div>\n            )}\n            <button onClick={signOut}>Sign Out</button>\n          </>\n        ) : (\n          <div>\n            <h2>Welcome!</h2>\n            <p>Please sign in with Google to continue</p>\n            <button onClick={googleSignIn}>Sign In with Google</button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  async function googleSignIn() {\n    const { error } = await supabase.auth.signInWithOAuth({\n      provider: 'google',\n      options: {\n        scopes: 'https://www.googleapis.com/auth/calendar',\n      },\n    });\n  \n    if (error) {\n      alert('Error logging into Google');\n      console.log(error);\n    }\n  }\n  \n  async function signOut() {\n    await supabase.auth.signOut();\n  }\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}