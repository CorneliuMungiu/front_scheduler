{"ast":null,"code":"var _jsxFileName = \"/home/cornel/client/src/App.js\",\n  _s = $RefreshSig$();\n// import './App.css';\n// import { useSession, useSupabaseClient , useSessionContext } from '@supabase/auth-helpers-react';\n// import DateTimePicker from 'react-datetime-picker';\n// import { useState } from 'react';\n// import 'react-calendar/dist/Calendar.css';\n// import 'react-clock/dist/Clock.css';\n// import 'react-datetime-picker/dist/DateTimePicker.css';\n\n// function App() {\n//   const [start, setStart] = useState(new Date());\n//   const [end, setEnd] = useState(new Date());\n//   const [eventName, setEventName] = useState(\"\");\n//   const [eventDescription, setEventDescription] = useState(\"\");\n\n//   const session = useSession();\n//   const supabase = useSupabaseClient();\n//   const { isLoading } = useSessionContext();\n\n//   if (isLoading) {\n//     return <></>;\n//   }\n\n//   async function googleSignIn() {\n//     const { error } = await supabase.auth.signInWithOAuth({\n//       provider: 'google',\n//       options: {\n//         scopes: 'https://www.googleapis.com/auth/calendar'\n//       }\n//     });\n//     if (error) {\n//       alert(\"Error logging into Google\");\n//       console.log(error);\n//     }\n//   }\n\n//   async function signOut() {\n//     await supabase.auth.signOut();\n//   }\n\n//   async function createCalendarEvent(){\n//     const event = {\n//       'summary' : eventName,\n//       'description' : eventDescription,\n//       'start' : {\n//         'dateTime' : start.toISOString(),\n//         'timeZone' : Intl.DateTimeFormat().resolvedOptions().timeZone\n//       },\n//       'end' : {\n//         'dateTime' : end.toISOString(),\n//         'timeZone' : Intl.DateTimeFormat().resolvedOptions().timeZone\n//       },\n//     }\n//     await fetch(\"https://www.googleapis.com/calendar/v3/calendars/primary/events\", {\n//       method : \"POST\",\n//       headers : {\n//         'Authorization' : 'Bearer ' + session.provider_token\n//       },\n//       body : JSON.stringify(event)\n//     }).then((data) => {\n//       return data.json();\n//     }).then((data) => {\n//       console.log(data);\n//     })\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"card\">\n//         {session ? (\n//           <>\n//             <h2>{session.user.email}</h2>\n//             <p>Start of your event</p>\n//             <div className=\"datetime-picker\">\n//               <DateTimePicker onChange={setStart} value={start} />\n//             </div>\n//             <p>End of your event</p>\n//             <div className=\"datetime-picker\">\n//               <DateTimePicker onChange={setEnd} value={end} />\n//             </div>\n//             <p>Event name</p>\n//             <div className=\"datetime-picker\">\n//               <input type='text' onChange={(e) => setEventName(e.target.value)}></input>\n//             </div>\n//             <p>Event Description</p>\n//             <div className=\"datetime-picker\">\n//               <input type='text' onChange={(e) => setEventDescription(e.target.value)}></input>\n//             </div>\n//             <hr/>\n//             <button onClick={() => createCalendarEvent()}>Create Calendar Event</button>\n//             <p></p>\n//             <button onClick={signOut}>Sign Out</button>\n//           </>\n//         ) : (\n//           <>\n//             <h2>Welcome!</h2>\n//             <p>Please sign in with Google to continue</p>\n//             <button onClick={googleSignIn}>Sign In with Google</button>\n//           </>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport './App.css';\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react';\nimport DateTimePicker from 'react-datetime-picker';\nimport { useState, useEffect } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-clock/dist/Clock.css';\nimport 'react-datetime-picker/dist/DateTimePicker.css';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [start, setStart] = useState(new Date());\n  const [end, setEnd] = useState(new Date());\n  const [eventName, setEventName] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\");\n  const [events, setEvents] = useState([]);\n  const [isCreating, setIsCreating] = useState(false);\n  const [editingEvent, setEditingEvent] = useState(null);\n  const session = useSession();\n  const supabase = useSupabaseClient();\n  const {\n    isLoading\n  } = useSessionContext();\n\n  // Hardcoded events for testing\n  const hardcodedEvents = [{\n    id: 1,\n    name: \"Meeting with team\",\n    description: \"Discuss project progress\",\n    start: new Date(2025, 3, 6, 10, 0),\n    end: new Date(2025, 3, 6, 11, 0)\n  }, {\n    id: 2,\n    name: \"Doctor's Appointment\",\n    description: \"Regular checkup\",\n    start: new Date(2025, 3, 7, 15, 30),\n    end: new Date(2025, 3, 7, 16, 30)\n  }, {\n    id: 3,\n    name: \"Lunch with friends\",\n    description: \"Catch up over lunch\",\n    start: new Date(2025, 3, 8, 12, 0),\n    end: new Date(2025, 3, 8, 13, 30)\n  }, {\n    id: 4,\n    name: \"Meeting with team\",\n    description: \"Discuss project progress\",\n    start: new Date(2025, 3, 6, 10, 0),\n    end: new Date(2025, 3, 6, 11, 0)\n  }, {\n    id: 5,\n    name: \"Doctor's Appointment\",\n    description: \"Regular checkup\",\n    start: new Date(2025, 3, 7, 15, 30),\n    end: new Date(2025, 3, 7, 16, 30)\n  }, {\n    id: 6,\n    name: \"Lunch with friends\",\n    description: \"Catch up over lunch\",\n    start: new Date(2025, 3, 8, 12, 0),\n    end: new Date(2025, 3, 8, 13, 30)\n  }];\n  useEffect(() => {\n    if (session) {\n      fetchEvents();\n    } else {\n      // If no session, use hardcoded events\n      setEvents(hardcodedEvents);\n    }\n  }, [session]);\n  const fetchEvents = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('events').select('*').eq('user_id', session.user.id);\n    if (error) {\n      console.error(\"Error fetching events:\", error);\n    } else {\n      setEvents(data);\n    }\n  };\n  const createEvent = async () => {\n    const event = {\n      name: eventName,\n      description: eventDescription,\n      start: start.toISOString(),\n      end: end.toISOString(),\n      user_id: session.user.id\n    };\n    const {\n      data,\n      error\n    } = await supabase.from('events').insert([event]);\n    if (error) {\n      alert('Error creating event');\n    } else {\n      setEvents([...events, data[0]]);\n      setIsCreating(false);\n      resetForm();\n    }\n  };\n  const deleteEvent = async id => {\n    const {\n      error\n    } = await supabase.from('events').delete().eq('id', id);\n    if (error) {\n      alert('Error deleting event');\n    } else {\n      setEvents(events.filter(event => event.id !== id));\n    }\n  };\n  const editEvent = event => {\n    setEditingEvent(event);\n    setStart(new Date(event.start));\n    setEnd(new Date(event.end));\n    setEventName(event.name);\n    setEventDescription(event.description);\n    setIsCreating(true); // Switch to edit mode\n  };\n  const updateEvent = async () => {\n    const updatedEvent = {\n      id: editingEvent.id,\n      name: eventName,\n      description: eventDescription,\n      start: start.toISOString(),\n      end: end.toISOString(),\n      user_id: session.user.id\n    };\n    const {\n      data,\n      error\n    } = await supabase.from('events').update(updatedEvent).eq('id', editingEvent.id);\n    if (error) {\n      alert('Error updating event');\n    } else {\n      setEvents(events.map(event => event.id === editingEvent.id ? data[0] : event));\n      setEditingEvent(null);\n      setIsCreating(false);\n      resetForm();\n    }\n  };\n  const sortEvents = sortBy => {\n    const sortedEvents = [...events].sort((a, b) => {\n      if (sortBy === 'name') {\n        return a.name.localeCompare(b.name);\n      } else if (sortBy === 'date') {\n        return new Date(a.start) - new Date(b.start);\n      }\n      return 0;\n    });\n    setEvents(sortedEvents);\n  };\n  const resetForm = () => {\n    setStart(new Date());\n    setEnd(new Date());\n    setEventName('');\n    setEventDescription('');\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: session ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: session.user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"events-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Upcoming Events\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"events-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => sortEvents('name'),\n              children: \"Sort by Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => sortEvents('date'),\n              children: \"Sort by Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsCreating(true),\n              children: \"Create Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-list\",\n            children: events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: event.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: event.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [new Date(event.start).toLocaleString(), \" - \", new Date(event.end).toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => editEvent(event),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteEvent(event.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 21\n              }, this)]\n            }, event.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), isCreating && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-event-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: editingEvent ? \"Edit Event\" : \"Create Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Start of your event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n            onChange: setStart,\n            value: start\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"End of your event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n            onChange: setEnd,\n            value: end\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Event name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: eventName,\n            onChange: e => setEventName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Event Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: eventDescription,\n            onChange: e => setEventDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: editingEvent ? updateEvent : createEvent,\n            children: editingEvent ? \"Update\" : \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsCreating(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => supabase.auth.signOut(),\n          children: \"Sign Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please sign in with Google to continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: googleSignIn,\n          children: \"Sign In with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n  async function googleSignIn() {\n    const {\n      error\n    } = await supabase.auth.signInWithOAuth({\n      provider: 'google',\n      options: {\n        scopes: 'https://www.googleapis.com/auth/calendar'\n      }\n    });\n    if (error) {\n      alert('Error logging into Google');\n      console.log(error);\n    }\n  }\n}\n_s(App, \"rX25WZF6KBp9867tAPpzWomjZn8=\", false, function () {\n  return [useSession, useSupabaseClient, useSessionContext];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useSession","useSupabaseClient","useSessionContext","DateTimePicker","useState","useEffect","Fragment","_Fragment","jsxDEV","_jsxDEV","App","_s","start","setStart","Date","end","setEnd","eventName","setEventName","eventDescription","setEventDescription","events","setEvents","isCreating","setIsCreating","editingEvent","setEditingEvent","session","supabase","isLoading","hardcodedEvents","id","name","description","fetchEvents","data","error","from","select","eq","user","console","createEvent","event","toISOString","user_id","insert","alert","resetForm","deleteEvent","delete","filter","editEvent","updateEvent","updatedEvent","update","map","sortEvents","sortBy","sortedEvents","sort","a","b","localeCompare","className","children","email","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toLocaleString","onChange","value","type","e","target","auth","signOut","googleSignIn","signInWithOAuth","provider","options","scopes","log","_c","$RefreshReg$"],"sources":["/home/cornel/client/src/App.js"],"sourcesContent":["// import './App.css';\n// import { useSession, useSupabaseClient , useSessionContext } from '@supabase/auth-helpers-react';\n// import DateTimePicker from 'react-datetime-picker';\n// import { useState } from 'react';\n// import 'react-calendar/dist/Calendar.css';\n// import 'react-clock/dist/Clock.css';\n// import 'react-datetime-picker/dist/DateTimePicker.css';\n\n\n// function App() {\n//   const [start, setStart] = useState(new Date());\n//   const [end, setEnd] = useState(new Date());\n//   const [eventName, setEventName] = useState(\"\");\n//   const [eventDescription, setEventDescription] = useState(\"\");\n\n//   const session = useSession();\n//   const supabase = useSupabaseClient();\n//   const { isLoading } = useSessionContext();\n\n//   if (isLoading) {\n//     return <></>;\n//   }\n\n//   async function googleSignIn() {\n//     const { error } = await supabase.auth.signInWithOAuth({\n//       provider: 'google',\n//       options: {\n//         scopes: 'https://www.googleapis.com/auth/calendar'\n//       }\n//     });\n//     if (error) {\n//       alert(\"Error logging into Google\");\n//       console.log(error);\n//     }\n//   }\n\n//   async function signOut() {\n//     await supabase.auth.signOut();\n//   }\n\n//   async function createCalendarEvent(){\n//     const event = {\n//       'summary' : eventName,\n//       'description' : eventDescription,\n//       'start' : {\n//         'dateTime' : start.toISOString(),\n//         'timeZone' : Intl.DateTimeFormat().resolvedOptions().timeZone\n//       },\n//       'end' : {\n//         'dateTime' : end.toISOString(),\n//         'timeZone' : Intl.DateTimeFormat().resolvedOptions().timeZone\n//       },\n//     }\n//     await fetch(\"https://www.googleapis.com/calendar/v3/calendars/primary/events\", {\n//       method : \"POST\",\n//       headers : {\n//         'Authorization' : 'Bearer ' + session.provider_token\n//       },\n//       body : JSON.stringify(event)\n//     }).then((data) => {\n//       return data.json();\n//     }).then((data) => {\n//       console.log(data);\n//     })\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"card\">\n//         {session ? (\n//           <>\n//             <h2>{session.user.email}</h2>\n//             <p>Start of your event</p>\n//             <div className=\"datetime-picker\">\n//               <DateTimePicker onChange={setStart} value={start} />\n//             </div>\n//             <p>End of your event</p>\n//             <div className=\"datetime-picker\">\n//               <DateTimePicker onChange={setEnd} value={end} />\n//             </div>\n//             <p>Event name</p>\n//             <div className=\"datetime-picker\">\n//               <input type='text' onChange={(e) => setEventName(e.target.value)}></input>\n//             </div>\n//             <p>Event Description</p>\n//             <div className=\"datetime-picker\">\n//               <input type='text' onChange={(e) => setEventDescription(e.target.value)}></input>\n//             </div>\n//             <hr/>\n//             <button onClick={() => createCalendarEvent()}>Create Calendar Event</button>\n//             <p></p>\n//             <button onClick={signOut}>Sign Out</button>\n//           </>\n//         ) : (\n//           <>\n//             <h2>Welcome!</h2>\n//             <p>Please sign in with Google to continue</p>\n//             <button onClick={googleSignIn}>Sign In with Google</button>\n//           </>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\n\nimport './App.css';\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react';\nimport DateTimePicker from 'react-datetime-picker';\nimport { useState, useEffect } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-clock/dist/Clock.css';\nimport 'react-datetime-picker/dist/DateTimePicker.css';\n\nfunction App() {\n  const [start, setStart] = useState(new Date());\n  const [end, setEnd] = useState(new Date());\n  const [eventName, setEventName] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\");\n  const [events, setEvents] = useState([]);\n  const [isCreating, setIsCreating] = useState(false);\n  const [editingEvent, setEditingEvent] = useState(null);\n\n  const session = useSession();\n  const supabase = useSupabaseClient();\n  const { isLoading } = useSessionContext();\n\n  // Hardcoded events for testing\n  const hardcodedEvents = [\n    {\n      id: 1,\n      name: \"Meeting with team\",\n      description: \"Discuss project progress\",\n      start: new Date(2025, 3, 6, 10, 0),\n      end: new Date(2025, 3, 6, 11, 0),\n    },\n    {\n      id: 2,\n      name: \"Doctor's Appointment\",\n      description: \"Regular checkup\",\n      start: new Date(2025, 3, 7, 15, 30),\n      end: new Date(2025, 3, 7, 16, 30),\n    },\n    {\n      id: 3,\n      name: \"Lunch with friends\",\n      description: \"Catch up over lunch\",\n      start: new Date(2025, 3, 8, 12, 0),\n      end: new Date(2025, 3, 8, 13, 30),\n    },\n    {\n      id: 4,\n      name: \"Meeting with team\",\n      description: \"Discuss project progress\",\n      start: new Date(2025, 3, 6, 10, 0),\n      end: new Date(2025, 3, 6, 11, 0),\n    },\n    {\n      id: 5,\n      name: \"Doctor's Appointment\",\n      description: \"Regular checkup\",\n      start: new Date(2025, 3, 7, 15, 30),\n      end: new Date(2025, 3, 7, 16, 30),\n    },\n    {\n      id: 6,\n      name: \"Lunch with friends\",\n      description: \"Catch up over lunch\",\n      start: new Date(2025, 3, 8, 12, 0),\n      end: new Date(2025, 3, 8, 13, 30),\n    },\n  ];\n\n  useEffect(() => {\n    if (session) {\n      fetchEvents();\n    } else {\n      // If no session, use hardcoded events\n      setEvents(hardcodedEvents);\n    }\n  }, [session]);\n\n  const fetchEvents = async () => {\n    const { data, error } = await supabase\n      .from('events')\n      .select('*')\n      .eq('user_id', session.user.id);\n    if (error) {\n      console.error(\"Error fetching events:\", error);\n    } else {\n      setEvents(data);\n    }\n  };\n\n  const createEvent = async () => {\n    const event = {\n      name: eventName,\n      description: eventDescription,\n      start: start.toISOString(),\n      end: end.toISOString(),\n      user_id: session.user.id\n    };\n\n    const { data, error } = await supabase\n      .from('events')\n      .insert([event]);\n\n    if (error) {\n      alert('Error creating event');\n    } else {\n      setEvents([...events, data[0]]);\n      setIsCreating(false);\n      resetForm();\n    }\n  };\n\n  const deleteEvent = async (id) => {\n    const { error } = await supabase\n      .from('events')\n      .delete()\n      .eq('id', id);\n\n    if (error) {\n      alert('Error deleting event');\n    } else {\n      setEvents(events.filter(event => event.id !== id));\n    }\n  };\n\n  const editEvent = (event) => {\n    setEditingEvent(event);\n    setStart(new Date(event.start));\n    setEnd(new Date(event.end));\n    setEventName(event.name);\n    setEventDescription(event.description);\n    setIsCreating(true); // Switch to edit mode\n  };\n\n  const updateEvent = async () => {\n    const updatedEvent = {\n      id: editingEvent.id,\n      name: eventName,\n      description: eventDescription,\n      start: start.toISOString(),\n      end: end.toISOString(),\n      user_id: session.user.id\n    };\n\n    const { data, error } = await supabase\n      .from('events')\n      .update(updatedEvent)\n      .eq('id', editingEvent.id);\n\n    if (error) {\n      alert('Error updating event');\n    } else {\n      setEvents(events.map((event) =>\n        event.id === editingEvent.id ? data[0] : event\n      ));\n      setEditingEvent(null);\n      setIsCreating(false);\n      resetForm();\n    }\n  };\n\n  const sortEvents = (sortBy) => {\n    const sortedEvents = [...events].sort((a, b) => {\n      if (sortBy === 'name') {\n        return a.name.localeCompare(b.name);\n      } else if (sortBy === 'date') {\n        return new Date(a.start) - new Date(b.start);\n      }\n      return 0;\n    });\n    setEvents(sortedEvents);\n  };\n\n  const resetForm = () => {\n    setStart(new Date());\n    setEnd(new Date());\n    setEventName('');\n    setEventDescription('');\n  };\n\n  if (isLoading) {\n    return <></>;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"card\">\n        {session ? (\n          <>\n            <h2>{session.user.email}</h2>\n            <div className=\"events-section\">\n              <h3>Upcoming Events</h3>\n              <div className=\"events-buttons\">\n                <button onClick={() => sortEvents('name')}>Sort by Name</button>\n                <button onClick={() => sortEvents('date')}>Sort by Date</button>\n                <button onClick={() => setIsCreating(true)}>Create Event</button>\n              </div>\n              <div className=\"event-list\">\n                {events.map(event => (\n                  <div key={event.id} className=\"event-card\">\n                    <h4>{event.name}</h4>\n                    <p>{event.description}</p>\n                    <p>{new Date(event.start).toLocaleString()} - {new Date(event.end).toLocaleString()}</p>\n                    <button onClick={() => editEvent(event)}>Edit</button>\n                    <button onClick={() => deleteEvent(event.id)}>Delete</button>\n                  </div>\n                ))}\n              </div>\n            </div>\n            {isCreating && (\n              <div className=\"create-event-form\">\n                <h3>{editingEvent ? \"Edit Event\" : \"Create Event\"}</h3>\n                <p>Start of your event</p>\n                <DateTimePicker onChange={setStart} value={start} />\n                <p>End of your event</p>\n                <DateTimePicker onChange={setEnd} value={end} />\n                <p>Event name</p>\n                <input type=\"text\" value={eventName} onChange={(e) => setEventName(e.target.value)} />\n                <p>Event Description</p>\n                <input type=\"text\" value={eventDescription} onChange={(e) => setEventDescription(e.target.value)} />\n                <button onClick={editingEvent ? updateEvent : createEvent}>\n                  {editingEvent ? \"Update\" : \"Create\"}\n                </button>\n                <button onClick={() => setIsCreating(false)}>Cancel</button>\n              </div>\n            )}\n            <button onClick={() => supabase.auth.signOut()}>Sign Out</button>\n          </>\n        ) : (\n          <div>\n            <h2>Welcome!</h2>\n            <p>Please sign in with Google to continue</p>\n            <button onClick={googleSignIn}>Sign In with Google</button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  async function googleSignIn() {\n    const { error } = await supabase.auth.signInWithOAuth({\n      provider: 'google',\n      options: {\n        scopes: 'https://www.googleapis.com/auth/calendar',\n      },\n    });\n    if (error) {\n      alert('Error logging into Google');\n      console.log(error);\n    }\n  }\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}