{"ast":null,"code":"var _jsxFileName = \"/home/cornel/client/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react';\nimport DateTimePicker from 'react-datetime-picker';\nimport { useState, useEffect } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-clock/dist/Clock.css';\nimport 'react-datetime-picker/dist/DateTimePicker.css';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [start, setStart] = useState(new Date());\n  const [end, setEnd] = useState(new Date());\n  const [eventName, setEventName] = useState(\"\");\n  const [attendee, setAttendee] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\");\n  const [events, setEvents] = useState([]);\n  const [isCreating, setIsCreating] = useState(false);\n  const [editingEvent, setEditingEvent] = useState(null);\n  const session = useSession();\n  const supabase = useSupabaseClient();\n  const {\n    isLoading\n  } = useSessionContext();\n  const [attendeeEmails, setAttendeeEmails] = useState(\"\"); // State pentru participantii prin email\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      if (session) {\n        const response1 = await fetch(`http://127.0.0.1:5000/get_user_id?email=${session.user.email}`);\n        const responseData = await response1.json();\n        const response = await fetch(`http://127.0.0.1:5000/events/${responseData.id}`);\n        const data = await response.json();\n        setEvents(data);\n      }\n    };\n    fetchEvents();\n  }, [session]);\n  const [isUserCreated, setIsUserCreated] = useState(false);\n  useEffect(() => {\n    // Verificăm dacă utilizatorul este autentificat și nu a fost creat deja\n    const createUserIfNeeded = async () => {\n      if (session && !isUserCreated) {\n        const response = await fetch('http://127.0.0.1:5000/create_user', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: session.user.email\n          }) // Trimitem email-ul utilizatorului\n        });\n        const data = await response.json();\n        if (response.ok) {\n          if (data.message === 'User created successfully!') {\n            console.log('User created successfully!');\n            setIsUserCreated(true); // Setăm că utilizatorul a fost creat\n          } else if (data.message === 'User already exists') {\n            console.log('User already exists!');\n          }\n        } else {\n          console.error('Failed to create user on backend', data);\n        }\n      }\n    };\n    createUserIfNeeded();\n  }, [session, isUserCreated]);\n  const fetchEvents = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('events').select('*').eq('user_id', session.user.id);\n    if (error) {\n      console.error(\"Error fetching events:\", error);\n    } else {\n      setEvents(data);\n    }\n  };\n  const parseDate = date => {\n    // Verifică dacă data este validă\n    if (isNaN(date.getTime())) {\n      alert('Invalid date selected');\n      return new Date(); // Folosește data curentă în caz de dată invalidă\n    }\n    return date;\n  };\n  const createEvent = async () => {\n    // Construiește obiectul evenimentului\n    const validStart = parseDate(start);\n    const validEnd = parseDate(end);\n    const event = {\n      title: eventName,\n      description: eventDescription,\n      start_time: validStart.toISOString(),\n      // Asigură-te că start este un obiect Date\n      end_time: validEnd.toISOString(),\n      // Asigură-te că end este un obiect Date\n      attendees: attendeeEmails.split(',').map(email => email.trim()) // Listează attendee-urile\n    };\n    try {\n      // Obține ID-ul organizer-ului pe baza email-ului\n      const response = await fetch(`http://127.0.0.1:5000/get_user_id?email=${session.user.email}`);\n      const responseData = await response.json();\n      if (!response.ok) {\n        throw new Error('Failed to fetch organizer ID');\n      }\n\n      // Asigură-te că răspunsul conține ID-ul utilizatorului\n      if (responseData.id) {\n        event.organizer_id = responseData.id; // Adaugă organizer_id în obiectul evenimentului\n      } else {\n        throw new Error('User not found');\n      }\n\n      // Trimite cererea POST către backend pentru a crea evenimentul\n      const createResponse = await fetch('http://127.0.0.1:5000/events', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json' // Indică faptul că trimitem JSON\n        },\n        body: JSON.stringify(event) // Transformă obiectul JavaScript într-un JSON string\n      });\n      const data = await createResponse.json(); // Obține răspunsul ca JSON\n\n      if (createResponse.ok) {\n        // Adaugă evenimentul nou la lista de evenimente\n        setEvents([...events, {\n          ...event,\n          id: data.event_id\n        }]);\n        setIsCreating(false);\n        resetForm();\n      } else {\n        console.error('Error creating event:', data);\n        alert('Error creating event');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Error creating event');\n    }\n  };\n  const deleteEvent = async id => {\n    const {\n      error\n    } = await supabase.from('events').delete().eq('id', id);\n    if (error) {\n      alert('Error deleting event');\n    } else {\n      setEvents(events.filter(event => event.id !== id));\n    }\n  };\n  const editEvent = event => {\n    setEditingEvent(event);\n    setStart(new Date(event.start));\n    setEnd(new Date(event.end));\n    setEventName(event.name);\n    setEventDescription(event.description);\n    setIsCreating(true); // Switch to edit mode\n  };\n  const updateEvent = async () => {\n    const updatedEvent = {\n      id: editingEvent.id,\n      name: eventName,\n      description: eventDescription,\n      start: start.toISOString(),\n      end: end.toISOString(),\n      user_id: session.user.id\n    };\n    const {\n      data,\n      error\n    } = await supabase.from('events').update(updatedEvent).eq('id', editingEvent.id);\n    if (error) {\n      alert('Error updating event');\n    } else {\n      setEvents(events.map(event => event.id === editingEvent.id ? data[0] : event));\n      setEditingEvent(null);\n      setIsCreating(false);\n      resetForm();\n    }\n  };\n  const sortEvents = sortBy => {\n    const sortedEvents = [...events].sort((a, b) => {\n      if (sortBy === 'name') {\n        return a.name.localeCompare(b.name);\n      } else if (sortBy === 'date') {\n        return new Date(a.start) - new Date(b.start);\n      }\n      return 0;\n    });\n    setEvents(sortedEvents);\n  };\n  const resetForm = () => {\n    setStart(new Date());\n    setEnd(new Date());\n    setEventName('');\n    setEventDescription('');\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: session ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: session.user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"events-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Upcoming Events\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"events-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => sortEvents('name'),\n              children: \"Sort by Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => sortEvents('date'),\n              children: \"Sort by Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsCreating(true),\n              children: \"Create Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-list\",\n            children: events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: event.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: event.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [new Date(event.start).toLocaleString(), \" - \", new Date(event.end).toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 21\n              }, this)]\n            }, event.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), isCreating && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-event-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: editingEvent ? \"Edit Event\" : \"Create Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Start of your event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n            onChange: setStart,\n            value: start\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"End of your event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n            onChange: setEnd,\n            value: end\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Event name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: eventName,\n            onChange: e => setEventName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Event Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: eventDescription,\n            onChange: e => setEventDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Attendees (separate emails with commas)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: attendeeEmails,\n            onChange: e => setAttendeeEmails(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: editingEvent ? updateEvent : createEvent,\n            children: editingEvent ? \"Update\" : \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsCreating(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: signOut,\n          children: \"Sign Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please sign in with Google to continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: googleSignIn,\n          children: \"Sign In with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n  async function googleSignIn() {\n    const {\n      error\n    } = await supabase.auth.signInWithOAuth({\n      provider: 'google',\n      options: {\n        scopes: 'https://www.googleapis.com/auth/calendar'\n      }\n    });\n    if (error) {\n      alert('Error logging into Google');\n      console.log(error);\n    }\n  }\n  async function signOut() {\n    await supabase.auth.signOut();\n  }\n}\n_s(App, \"Gc/HzqXJ0Fz3+OWUcxIH4bOTYIg=\", false, function () {\n  return [useSession, useSupabaseClient, useSessionContext];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useSession","useSupabaseClient","useSessionContext","DateTimePicker","useState","useEffect","Fragment","_Fragment","jsxDEV","_jsxDEV","App","_s","start","setStart","Date","end","setEnd","eventName","setEventName","attendee","setAttendee","eventDescription","setEventDescription","events","setEvents","isCreating","setIsCreating","editingEvent","setEditingEvent","session","supabase","isLoading","attendeeEmails","setAttendeeEmails","fetchEvents","response1","fetch","user","email","responseData","json","response","id","data","isUserCreated","setIsUserCreated","createUserIfNeeded","method","headers","body","JSON","stringify","ok","message","console","log","error","from","select","eq","parseDate","date","isNaN","getTime","alert","createEvent","validStart","validEnd","event","title","description","start_time","toISOString","end_time","attendees","split","map","trim","Error","organizer_id","createResponse","event_id","resetForm","deleteEvent","delete","filter","editEvent","name","updateEvent","updatedEvent","user_id","update","sortEvents","sortBy","sortedEvents","sort","a","b","localeCompare","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toLocaleString","onChange","value","type","e","target","signOut","googleSignIn","auth","signInWithOAuth","provider","options","scopes","_c","$RefreshReg$"],"sources":["/home/cornel/client/src/App.js"],"sourcesContent":["import './App.css';\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react';\nimport DateTimePicker from 'react-datetime-picker';\nimport { useState, useEffect } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-clock/dist/Clock.css';\nimport 'react-datetime-picker/dist/DateTimePicker.css';\n\nfunction App() {\n  const [start, setStart] = useState(new Date());\n  const [end, setEnd] = useState(new Date());\n  const [eventName, setEventName] = useState(\"\");\n  const [attendee, setAttendee] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\");\n  const [events, setEvents] = useState([]);\n  const [isCreating, setIsCreating] = useState(false);\n  const [editingEvent, setEditingEvent] = useState(null);\n\n  const session = useSession();\n  const supabase = useSupabaseClient();\n  const { isLoading } = useSessionContext();\n\n  const [attendeeEmails, setAttendeeEmails] = useState(\"\");  // State pentru participantii prin email\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      if (session) {\n        const response1 = await fetch(`http://127.0.0.1:5000/get_user_id?email=${session.user.email}`);\n        const responseData = await response1.json();\n        const response = await fetch(`http://127.0.0.1:5000/events/${responseData.id}`);\n        const data = await response.json();\n        setEvents(data);\n      }\n    };\n\n    fetchEvents();\n  }, [session]);\n\n\n  const [isUserCreated, setIsUserCreated] = useState(false);\n  useEffect(() => {\n    // Verificăm dacă utilizatorul este autentificat și nu a fost creat deja\n    const createUserIfNeeded = async () => {\n      if (session && !isUserCreated) {\n        const response = await fetch('http://127.0.0.1:5000/create_user', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ email: session.user.email }),  // Trimitem email-ul utilizatorului\n        });\n\n        const data = await response.json();\n\n        if (response.ok) {\n          if (data.message === 'User created successfully!') {\n            console.log('User created successfully!');\n            setIsUserCreated(true); // Setăm că utilizatorul a fost creat\n          } else if (data.message === 'User already exists') {\n            console.log('User already exists!');\n          }\n        } else {\n          console.error('Failed to create user on backend', data);\n        }\n      }\n    };\n\n    createUserIfNeeded();\n  }, [session, isUserCreated]);\n\n\n  const fetchEvents = async () => {\n    const { data, error } = await supabase\n      .from('events')\n      .select('*')\n      .eq('user_id', session.user.id);\n    if (error) {\n      console.error(\"Error fetching events:\", error);\n    } else {\n      setEvents(data);\n    }\n  };\n\n  const parseDate = (date) => {\n    // Verifică dacă data este validă\n    if (isNaN(date.getTime())) {\n      alert('Invalid date selected');\n      return new Date();  // Folosește data curentă în caz de dată invalidă\n    }\n    return date;\n  };\n\n  const createEvent = async () => {\n    // Construiește obiectul evenimentului\n    const validStart = parseDate(start);\n    const validEnd = parseDate(end);\n\n    const event = {\n      title: eventName,\n      description: eventDescription,\n      start_time: validStart.toISOString(),  // Asigură-te că start este un obiect Date\n      end_time: validEnd.toISOString(),      // Asigură-te că end este un obiect Date\n      attendees: attendeeEmails.split(',').map(email => email.trim())  // Listează attendee-urile\n    };\n  \n    try {\n      // Obține ID-ul organizer-ului pe baza email-ului\n      const response = await fetch(`http://127.0.0.1:5000/get_user_id?email=${session.user.email}`);\n      const responseData = await response.json();\n      \n      if (!response.ok) {\n        throw new Error('Failed to fetch organizer ID');\n      }\n  \n      // Asigură-te că răspunsul conține ID-ul utilizatorului\n      if (responseData.id) {\n        event.organizer_id = responseData.id;  // Adaugă organizer_id în obiectul evenimentului\n      } else {\n        throw new Error('User not found');\n      }\n  \n      // Trimite cererea POST către backend pentru a crea evenimentul\n      const createResponse = await fetch('http://127.0.0.1:5000/events', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',  // Indică faptul că trimitem JSON\n        },\n        body: JSON.stringify(event),  // Transformă obiectul JavaScript într-un JSON string\n      });\n  \n      const data = await createResponse.json();  // Obține răspunsul ca JSON\n  \n      if (createResponse.ok) {\n        // Adaugă evenimentul nou la lista de evenimente\n        setEvents([...events, { ...event, id: data.event_id }]);\n        setIsCreating(false);\n        resetForm();\n      } else {\n        console.error('Error creating event:', data);\n        alert('Error creating event');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Error creating event');\n    }\n  };\n  \n\n  const deleteEvent = async (id) => {\n    const { error } = await supabase\n      .from('events')\n      .delete()\n      .eq('id', id);\n\n    if (error) {\n      alert('Error deleting event');\n    } else {\n      setEvents(events.filter(event => event.id !== id));\n    }\n  };\n\n  const editEvent = (event) => {\n    setEditingEvent(event);\n    setStart(new Date(event.start));\n    setEnd(new Date(event.end));\n    setEventName(event.name);\n    setEventDescription(event.description);\n    setIsCreating(true); // Switch to edit mode\n  };\n\n  const updateEvent = async () => {\n    const updatedEvent = {\n      id: editingEvent.id,\n      name: eventName,\n      description: eventDescription,\n      start: start.toISOString(),\n      end: end.toISOString(),\n      user_id: session.user.id\n    };\n\n    const { data, error } = await supabase\n      .from('events')\n      .update(updatedEvent)\n      .eq('id', editingEvent.id);\n\n    if (error) {\n      alert('Error updating event');\n    } else {\n      setEvents(events.map((event) =>\n        event.id === editingEvent.id ? data[0] : event\n      ));\n      setEditingEvent(null);\n      setIsCreating(false);\n      resetForm();\n    }\n  };\n\n  const sortEvents = (sortBy) => {\n    const sortedEvents = [...events].sort((a, b) => {\n      if (sortBy === 'name') {\n        return a.name.localeCompare(b.name);\n      } else if (sortBy === 'date') {\n        return new Date(a.start) - new Date(b.start);\n      }\n      return 0;\n    });\n    setEvents(sortedEvents);\n  };\n\n  const resetForm = () => {\n    setStart(new Date());\n    setEnd(new Date());\n    setEventName('');\n    setEventDescription('');\n  };\n\n  if (isLoading) {\n    return <></>;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"card\">\n        {session ? (\n          <>\n            <h2>{session.user.email}</h2>\n            <div className=\"events-section\">\n              <h3>Upcoming Events</h3>\n              <div className=\"events-buttons\">\n                <button onClick={() => sortEvents('name')}>Sort by Name</button>\n                <button onClick={() => sortEvents('date')}>Sort by Date</button>\n                <button onClick={() => setIsCreating(true)}>Create Event</button>\n              </div>\n              <div className=\"event-list\">\n                {events.map(event => (\n                  <div key={event.id} className=\"event-card\">\n                    <h4>{event.name}</h4>\n                    <p>{event.description}</p>\n                    <p>{new Date(event.start).toLocaleString()} - {new Date(event.end).toLocaleString()}</p>\n                    <button >Edit</button>\n                    <button >Delete</button>\n                  </div>\n                ))}\n              </div>\n            </div>\n            {isCreating && (\n              <div className=\"create-event-form\">\n                <h3>{editingEvent ? \"Edit Event\" : \"Create Event\"}</h3>\n                <p>Start of your event</p>\n                <DateTimePicker onChange={setStart} value={start} />\n                <p>End of your event</p>\n                <DateTimePicker onChange={setEnd} value={end} />\n                <p>Event name</p>\n                <input type=\"text\" value={eventName} onChange={(e) => setEventName(e.target.value)} />\n                <p>Event Description</p>\n                <input type=\"text\" value={eventDescription} onChange={(e) => setEventDescription(e.target.value)} />\n                <p>Attendees (separate emails with commas)</p>\n                <input \n                  type=\"text\" \n                  value={attendeeEmails} \n                  onChange={(e) => setAttendeeEmails(e.target.value)} \n                />\n                <p></p>\n                <button onClick={editingEvent ? updateEvent : createEvent}>\n                  {editingEvent ? \"Update\" : \"Create\"}\n                </button>\n                <button onClick={() => setIsCreating(false)}>Cancel</button>\n              </div>\n            )}\n            <button onClick={signOut}>Sign Out</button>\n          </>\n        ) : (\n          <div>\n            <h2>Welcome!</h2>\n            <p>Please sign in with Google to continue</p>\n            <button onClick={googleSignIn}>Sign In with Google</button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  async function googleSignIn() {\n    const { error } = await supabase.auth.signInWithOAuth({\n      provider: 'google',\n      options: {\n        scopes: 'https://www.googleapis.com/auth/calendar',\n      },\n    });\n  \n    if (error) {\n      alert('Error logging into Google');\n      console.log(error);\n    }\n  }\n  \n  async function signOut() {\n    await supabase.auth.signOut();\n  }\n\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}