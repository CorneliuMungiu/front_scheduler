{"ast":null,"code":"var _jsxFileName = \"/home/cornel/client/src/App.js\",\n  _s = $RefreshSig$();\n// import './App.css';\n// import { useSession, useSupabaseClient , useSessionContext } from '@supabase/auth-helpers-react';\n// import DateTimePicker from 'react-datetime-picker';\n// import { useState } from 'react';\n// import 'react-calendar/dist/Calendar.css';\n// import 'react-clock/dist/Clock.css';\n// import 'react-datetime-picker/dist/DateTimePicker.css';\n\n// function App() {\n//   const [start, setStart] = useState(new Date());\n//   const [end, setEnd] = useState(new Date());\n//   const [eventName, setEventName] = useState(\"\");\n//   const [eventDescription, setEventDescription] = useState(\"\");\n\n//   const session = useSession();\n//   const supabase = useSupabaseClient();\n//   const { isLoading } = useSessionContext();\n\n//   if (isLoading) {\n//     return <></>;\n//   }\n\n//   async function googleSignIn() {\n//     const { error } = await supabase.auth.signInWithOAuth({\n//       provider: 'google',\n//       options: {\n//         scopes: 'https://www.googleapis.com/auth/calendar'\n//       }\n//     });\n//     if (error) {\n//       alert(\"Error logging into Google\");\n//       console.log(error);\n//     }\n//   }\n\n// async function signOut() {\n//   await supabase.auth.signOut();\n// }\n\n//   async function createCalendarEvent(){\n//     const event = {\n//       'summary' : eventName,\n//       'description' : eventDescription,\n//       'start' : {\n//         'dateTime' : start.toISOString(),\n//         'timeZone' : Intl.DateTimeFormat().resolvedOptions().timeZone\n//       },\n//       'end' : {\n//         'dateTime' : end.toISOString(),\n//         'timeZone' : Intl.DateTimeFormat().resolvedOptions().timeZone\n//       },\n//     }\n//     await fetch(\"https://www.googleapis.com/calendar/v3/calendars/primary/events\", {\n//       method : \"POST\",\n//       headers : {\n//         'Authorization' : 'Bearer ' + session.provider_token\n//       },\n//       body : JSON.stringify(event)\n//     }).then((data) => {\n//       return data.json();\n//     }).then((data) => {\n//       console.log(data);\n//     })\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"card\">\n//         {session ? (\n//           <>\n//             <h2>{session.user.email}</h2>\n//             <p>Start of your event</p>\n//             <div className=\"datetime-picker\">\n//               <DateTimePicker onChange={setStart} value={start} />\n//             </div>\n//             <p>End of your event</p>\n//             <div className=\"datetime-picker\">\n//               <DateTimePicker onChange={setEnd} value={end} />\n//             </div>\n//             <p>Event name</p>\n//             <div className=\"datetime-picker\">\n//               <input type='text' onChange={(e) => setEventName(e.target.value)}></input>\n//             </div>\n//             <p>Event Description</p>\n//             <div className=\"datetime-picker\">\n//               <input type='text' onChange={(e) => setEventDescription(e.target.value)}></input>\n//             </div>\n//             <hr/>\n//             <button onClick={() => createCalendarEvent()}>Create Calendar Event</button>\n//             <p></p>\n//             <button onClick={signOut}>Sign Out</button>\n//           </>\n//         ) : (\n//           <>\n//             <h2>Welcome!</h2>\n//             <p>Please sign in with Google to continue</p>\n//             <button onClick={googleSignIn}>Sign In with Google</button>\n//           </>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport './App.css';\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react';\nimport DateTimePicker from 'react-datetime-picker';\nimport { useState, useEffect } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-clock/dist/Clock.css';\nimport 'react-datetime-picker/dist/DateTimePicker.css';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [start, setStart] = useState(new Date());\n  const [end, setEnd] = useState(new Date());\n  const [eventName, setEventName] = useState(\"\");\n  const [attendee, setAttendee] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\");\n  const [events, setEvents] = useState([]);\n  const [isCreating, setIsCreating] = useState(false);\n  const [editingEvent, setEditingEvent] = useState(null);\n  const session = useSession();\n  const supabase = useSupabaseClient();\n  const {\n    isLoading\n  } = useSessionContext();\n  const [attendeeEmails, setAttendeeEmails] = useState(\"\"); // State pentru participantii prin email\n\n  const [isUserCreated, setIsUserCreated] = useState(false);\n  useEffect(() => {\n    // Verificăm dacă utilizatorul este autentificat și nu a fost creat deja\n    const createUserIfNeeded = async () => {\n      if (session && !isUserCreated) {\n        const response = await fetch('http://127.0.0.1:5000/create_user', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: session.user.email\n          }) // Trimitem email-ul utilizatorului\n        });\n        const data = await response.json();\n        if (response.ok) {\n          if (data.message === 'User created successfully!') {\n            console.log('User created successfully!');\n            setIsUserCreated(true); // Setăm că utilizatorul a fost creat\n          } else if (data.message === 'User already exists') {\n            console.log('User already exists!');\n          }\n        } else {\n          console.error('Failed to create user on backend', data);\n        }\n      }\n    };\n    createUserIfNeeded();\n  }, [session, isUserCreated]);\n\n  // Hardcoded events for testing\n  const hardcodedEvents = [{\n    id: 1,\n    name: \"Meeting with team\",\n    description: \"Discuss project progress\",\n    start: new Date(2025, 3, 6, 10, 0),\n    end: new Date(2025, 3, 6, 11, 0)\n  }, {\n    id: 2,\n    name: \"Doctor's Appointment\",\n    description: \"Regular checkup\",\n    start: new Date(2025, 3, 7, 15, 30),\n    end: new Date(2025, 3, 7, 16, 30)\n  }, {\n    id: 3,\n    name: \"Lunch with friends\",\n    description: \"Catch up over lunch\",\n    start: new Date(2025, 3, 8, 12, 0),\n    end: new Date(2025, 3, 8, 13, 30)\n  }, {\n    id: 4,\n    name: \"Meeting with team\",\n    description: \"Discuss project progress\",\n    start: new Date(2025, 3, 6, 10, 0),\n    end: new Date(2025, 3, 6, 11, 0)\n  }, {\n    id: 5,\n    name: \"Doctor's Appointment\",\n    description: \"Regular checkup\",\n    start: new Date(2025, 3, 7, 15, 30),\n    end: new Date(2025, 3, 7, 16, 30)\n  }, {\n    id: 6,\n    name: \"Lunch with friends\",\n    description: \"Catch up over lunch\",\n    start: new Date(2025, 3, 8, 12, 0),\n    end: new Date(2025, 3, 8, 13, 30)\n  }];\n  useEffect(() => {\n    if (session) {\n      fetchEvents();\n    } else {\n      // If no session, use hardcoded events\n      setEvents(hardcodedEvents);\n    }\n  }, [session]);\n  const fetchEvents = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('events').select('*').eq('user_id', session.user.id);\n    if (error) {\n      console.error(\"Error fetching events:\", error);\n    } else {\n      setEvents(data);\n    }\n  };\n\n  // const createEvent = async () => {\n  //   const event = {\n  //     name: eventName,\n  //     description: eventDescription,\n  //     start: start.toISOString(),\n  //     end: end.toISOString(),\n  //     user_id: session.user.id\n  //   };\n\n  //   const { data, error } = await supabase\n  //     .from('events')\n  //     .insert([event]);\n\n  //   if (error) {\n  //     alert('Error creating event');\n  //   } else {\n  //     setEvents([...events, data[0]]);\n  //     setIsCreating(false);\n  //     resetForm();\n  //   }\n  // };\n\n  const createEvent = async () => {\n    const event = {\n      title: eventName,\n      description: eventDescription,\n      start_time: start.toISOString(),\n      // Asigură-te că start este un obiect Date\n      end_time: end.toISOString(),\n      // Asigură-te că end este un obiect Date\n      organizer_id: parseInt(session.user.id),\n      // ID-ul organizer-ului (exemplu: session.user.id)\n      attendees: attendeeEmails.split(',').map(email => email.trim()) // Listează attendee-urile\n    };\n    try {\n      // Trimite cererea POST către backend\n      const response = await fetch('http://127.0.0.1:5000/events', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json' // Indică faptul că trimitem JSON\n        },\n        body: JSON.stringify(event) // Transformă obiectul JavaScript într-un JSON string\n      });\n      const textResponse = await response.text(); // Citește răspunsul ca text\n      console.log(textResponse); // Verifică ce răspunde serverul\n\n      // Încearcă să parsezi răspunsul ca JSON\n      try {\n        const data = JSON.parse(textResponse);\n        if (response.ok) {\n          setEvents([...events, data.event]); // Actualizează lista de evenimente\n          setIsCreating(false);\n          resetForm();\n        } else {\n          console.error('Error creating event:', data);\n          alert('Error creating event');\n        }\n      } catch (jsonError) {\n        console.error('Invalid JSON response:', jsonError);\n        alert('Received invalid response from the server');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Error creating event');\n    }\n  };\n  const deleteEvent = async id => {\n    const {\n      error\n    } = await supabase.from('events').delete().eq('id', id);\n    if (error) {\n      alert('Error deleting event');\n    } else {\n      setEvents(events.filter(event => event.id !== id));\n    }\n  };\n  const editEvent = event => {\n    setEditingEvent(event);\n    setStart(new Date(event.start));\n    setEnd(new Date(event.end));\n    setEventName(event.name);\n    setEventDescription(event.description);\n    setIsCreating(true); // Switch to edit mode\n  };\n  const updateEvent = async () => {\n    const updatedEvent = {\n      id: editingEvent.id,\n      name: eventName,\n      description: eventDescription,\n      start: start.toISOString(),\n      end: end.toISOString(),\n      user_id: session.user.id\n    };\n    const {\n      data,\n      error\n    } = await supabase.from('events').update(updatedEvent).eq('id', editingEvent.id);\n    if (error) {\n      alert('Error updating event');\n    } else {\n      setEvents(events.map(event => event.id === editingEvent.id ? data[0] : event));\n      setEditingEvent(null);\n      setIsCreating(false);\n      resetForm();\n    }\n  };\n  const sortEvents = sortBy => {\n    const sortedEvents = [...events].sort((a, b) => {\n      if (sortBy === 'name') {\n        return a.name.localeCompare(b.name);\n      } else if (sortBy === 'date') {\n        return new Date(a.start) - new Date(b.start);\n      }\n      return 0;\n    });\n    setEvents(sortedEvents);\n  };\n  const resetForm = () => {\n    setStart(new Date());\n    setEnd(new Date());\n    setEventName('');\n    setEventDescription('');\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: session ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: session.user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"events-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Upcoming Events\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"events-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => sortEvents('name'),\n              children: \"Sort by Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => sortEvents('date'),\n              children: \"Sort by Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsCreating(true),\n              children: \"Create Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-list\",\n            children: events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: event.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: event.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [new Date(event.start).toLocaleString(), \" - \", new Date(event.end).toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => editEvent(event),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteEvent(event.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 21\n              }, this)]\n            }, event.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this), isCreating && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-event-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: editingEvent ? \"Edit Event\" : \"Create Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Start of your event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n            onChange: setStart,\n            value: start\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"End of your event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n            onChange: setEnd,\n            value: end\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Event name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: eventName,\n            onChange: e => setEventName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Event Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: eventDescription,\n            onChange: e => setEventDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Attendees (separate emails with commas)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: attendeeEmails,\n            onChange: e => setAttendeeEmails(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: editingEvent ? updateEvent : createEvent,\n            children: editingEvent ? \"Update\" : \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsCreating(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: signOut,\n          children: \"Sign Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please sign in with Google to continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: googleSignIn,\n          children: \"Sign In with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 377,\n    columnNumber: 5\n  }, this);\n  async function googleSignIn() {\n    const {\n      error\n    } = await supabase.auth.signInWithOAuth({\n      provider: 'google',\n      options: {\n        scopes: 'https://www.googleapis.com/auth/calendar'\n      }\n    });\n    if (error) {\n      alert('Error logging into Google');\n      console.log(error);\n    }\n  }\n  async function signOut() {\n    await supabase.auth.signOut();\n  }\n}\n_s(App, \"/PJWsbGRk8Gy6o1TzMcCUipVtjU=\", false, function () {\n  return [useSession, useSupabaseClient, useSessionContext];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useSession","useSupabaseClient","useSessionContext","DateTimePicker","useState","useEffect","Fragment","_Fragment","jsxDEV","_jsxDEV","App","_s","start","setStart","Date","end","setEnd","eventName","setEventName","attendee","setAttendee","eventDescription","setEventDescription","events","setEvents","isCreating","setIsCreating","editingEvent","setEditingEvent","session","supabase","isLoading","attendeeEmails","setAttendeeEmails","isUserCreated","setIsUserCreated","createUserIfNeeded","response","fetch","method","headers","body","JSON","stringify","email","user","data","json","ok","message","console","log","error","hardcodedEvents","id","name","description","fetchEvents","from","select","eq","createEvent","event","title","start_time","toISOString","end_time","organizer_id","parseInt","attendees","split","map","trim","textResponse","text","parse","resetForm","alert","jsonError","deleteEvent","delete","filter","editEvent","updateEvent","updatedEvent","user_id","update","sortEvents","sortBy","sortedEvents","sort","a","b","localeCompare","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toLocaleString","onChange","value","type","e","target","signOut","googleSignIn","auth","signInWithOAuth","provider","options","scopes","_c","$RefreshReg$"],"sources":["/home/cornel/client/src/App.js"],"sourcesContent":["// import './App.css';\n// import { useSession, useSupabaseClient , useSessionContext } from '@supabase/auth-helpers-react';\n// import DateTimePicker from 'react-datetime-picker';\n// import { useState } from 'react';\n// import 'react-calendar/dist/Calendar.css';\n// import 'react-clock/dist/Clock.css';\n// import 'react-datetime-picker/dist/DateTimePicker.css';\n\n\n// function App() {\n//   const [start, setStart] = useState(new Date());\n//   const [end, setEnd] = useState(new Date());\n//   const [eventName, setEventName] = useState(\"\");\n//   const [eventDescription, setEventDescription] = useState(\"\");\n\n//   const session = useSession();\n//   const supabase = useSupabaseClient();\n//   const { isLoading } = useSessionContext();\n\n//   if (isLoading) {\n//     return <></>;\n//   }\n\n//   async function googleSignIn() {\n//     const { error } = await supabase.auth.signInWithOAuth({\n//       provider: 'google',\n//       options: {\n//         scopes: 'https://www.googleapis.com/auth/calendar'\n//       }\n//     });\n//     if (error) {\n//       alert(\"Error logging into Google\");\n//       console.log(error);\n//     }\n//   }\n\n  // async function signOut() {\n  //   await supabase.auth.signOut();\n  // }\n\n//   async function createCalendarEvent(){\n//     const event = {\n//       'summary' : eventName,\n//       'description' : eventDescription,\n//       'start' : {\n//         'dateTime' : start.toISOString(),\n//         'timeZone' : Intl.DateTimeFormat().resolvedOptions().timeZone\n//       },\n//       'end' : {\n//         'dateTime' : end.toISOString(),\n//         'timeZone' : Intl.DateTimeFormat().resolvedOptions().timeZone\n//       },\n//     }\n//     await fetch(\"https://www.googleapis.com/calendar/v3/calendars/primary/events\", {\n//       method : \"POST\",\n//       headers : {\n//         'Authorization' : 'Bearer ' + session.provider_token\n//       },\n//       body : JSON.stringify(event)\n//     }).then((data) => {\n//       return data.json();\n//     }).then((data) => {\n//       console.log(data);\n//     })\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"card\">\n//         {session ? (\n//           <>\n//             <h2>{session.user.email}</h2>\n//             <p>Start of your event</p>\n//             <div className=\"datetime-picker\">\n//               <DateTimePicker onChange={setStart} value={start} />\n//             </div>\n//             <p>End of your event</p>\n//             <div className=\"datetime-picker\">\n//               <DateTimePicker onChange={setEnd} value={end} />\n//             </div>\n//             <p>Event name</p>\n//             <div className=\"datetime-picker\">\n//               <input type='text' onChange={(e) => setEventName(e.target.value)}></input>\n//             </div>\n//             <p>Event Description</p>\n//             <div className=\"datetime-picker\">\n//               <input type='text' onChange={(e) => setEventDescription(e.target.value)}></input>\n//             </div>\n//             <hr/>\n//             <button onClick={() => createCalendarEvent()}>Create Calendar Event</button>\n//             <p></p>\n//             <button onClick={signOut}>Sign Out</button>\n//           </>\n//         ) : (\n//           <>\n//             <h2>Welcome!</h2>\n//             <p>Please sign in with Google to continue</p>\n//             <button onClick={googleSignIn}>Sign In with Google</button>\n//           </>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\n\nimport './App.css';\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react';\nimport DateTimePicker from 'react-datetime-picker';\nimport { useState, useEffect } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-clock/dist/Clock.css';\nimport 'react-datetime-picker/dist/DateTimePicker.css';\n\nfunction App() {\n  const [start, setStart] = useState(new Date());\n  const [end, setEnd] = useState(new Date());\n  const [eventName, setEventName] = useState(\"\");\n  const [attendee, setAttendee] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\");\n  const [events, setEvents] = useState([]);\n  const [isCreating, setIsCreating] = useState(false);\n  const [editingEvent, setEditingEvent] = useState(null);\n\n  const session = useSession();\n  const supabase = useSupabaseClient();\n  const { isLoading } = useSessionContext();\n\n  const [attendeeEmails, setAttendeeEmails] = useState(\"\");  // State pentru participantii prin email\n\n\n  const [isUserCreated, setIsUserCreated] = useState(false);\n  useEffect(() => {\n    // Verificăm dacă utilizatorul este autentificat și nu a fost creat deja\n    const createUserIfNeeded = async () => {\n      if (session && !isUserCreated) {\n        const response = await fetch('http://127.0.0.1:5000/create_user', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ email: session.user.email }),  // Trimitem email-ul utilizatorului\n        });\n\n        const data = await response.json();\n\n        if (response.ok) {\n          if (data.message === 'User created successfully!') {\n            console.log('User created successfully!');\n            setIsUserCreated(true); // Setăm că utilizatorul a fost creat\n          } else if (data.message === 'User already exists') {\n            console.log('User already exists!');\n          }\n        } else {\n          console.error('Failed to create user on backend', data);\n        }\n      }\n    };\n\n    createUserIfNeeded();\n  }, [session, isUserCreated]);\n\n\n  // Hardcoded events for testing\n  const hardcodedEvents = [\n    {\n      id: 1,\n      name: \"Meeting with team\",\n      description: \"Discuss project progress\",\n      start: new Date(2025, 3, 6, 10, 0),\n      end: new Date(2025, 3, 6, 11, 0),\n    },\n    {\n      id: 2,\n      name: \"Doctor's Appointment\",\n      description: \"Regular checkup\",\n      start: new Date(2025, 3, 7, 15, 30),\n      end: new Date(2025, 3, 7, 16, 30),\n    },\n    {\n      id: 3,\n      name: \"Lunch with friends\",\n      description: \"Catch up over lunch\",\n      start: new Date(2025, 3, 8, 12, 0),\n      end: new Date(2025, 3, 8, 13, 30),\n    },\n    {\n      id: 4,\n      name: \"Meeting with team\",\n      description: \"Discuss project progress\",\n      start: new Date(2025, 3, 6, 10, 0),\n      end: new Date(2025, 3, 6, 11, 0),\n    },\n    {\n      id: 5,\n      name: \"Doctor's Appointment\",\n      description: \"Regular checkup\",\n      start: new Date(2025, 3, 7, 15, 30),\n      end: new Date(2025, 3, 7, 16, 30),\n    },\n    {\n      id: 6,\n      name: \"Lunch with friends\",\n      description: \"Catch up over lunch\",\n      start: new Date(2025, 3, 8, 12, 0),\n      end: new Date(2025, 3, 8, 13, 30),\n    },\n  ];\n\n  useEffect(() => {\n    if (session) {\n      fetchEvents();\n    } else {\n      // If no session, use hardcoded events\n      setEvents(hardcodedEvents);\n    }\n  }, [session]);\n\n  const fetchEvents = async () => {\n    const { data, error } = await supabase\n      .from('events')\n      .select('*')\n      .eq('user_id', session.user.id);\n    if (error) {\n      console.error(\"Error fetching events:\", error);\n    } else {\n      setEvents(data);\n    }\n  };\n\n  // const createEvent = async () => {\n  //   const event = {\n  //     name: eventName,\n  //     description: eventDescription,\n  //     start: start.toISOString(),\n  //     end: end.toISOString(),\n  //     user_id: session.user.id\n  //   };\n\n  //   const { data, error } = await supabase\n  //     .from('events')\n  //     .insert([event]);\n\n  //   if (error) {\n  //     alert('Error creating event');\n  //   } else {\n  //     setEvents([...events, data[0]]);\n  //     setIsCreating(false);\n  //     resetForm();\n  //   }\n  // };\n\n  const createEvent = async () => {\n    const event = {\n      title: eventName,\n      description: eventDescription,\n      start_time: start.toISOString(),  // Asigură-te că start este un obiect Date\n      end_time: end.toISOString(),      // Asigură-te că end este un obiect Date\n      organizer_id: parseInt(session.user.id),    // ID-ul organizer-ului (exemplu: session.user.id)\n      attendees: attendeeEmails.split(',').map(email => email.trim())  // Listează attendee-urile\n    };\n  \n    try {\n      // Trimite cererea POST către backend\n      const response = await fetch('http://127.0.0.1:5000/events', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',  // Indică faptul că trimitem JSON\n        },\n        body: JSON.stringify(event),  // Transformă obiectul JavaScript într-un JSON string\n      });\n  \n      const textResponse = await response.text();  // Citește răspunsul ca text\n      console.log(textResponse);  // Verifică ce răspunde serverul\n  \n      // Încearcă să parsezi răspunsul ca JSON\n      try {\n        const data = JSON.parse(textResponse);\n        if (response.ok) {\n          setEvents([...events, data.event]);  // Actualizează lista de evenimente\n          setIsCreating(false);\n          resetForm();\n        } else {\n          console.error('Error creating event:', data);\n          alert('Error creating event');\n        }\n      } catch (jsonError) {\n        console.error('Invalid JSON response:', jsonError);\n        alert('Received invalid response from the server');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Error creating event');\n    }\n  };\n  \n  \n\n  const deleteEvent = async (id) => {\n    const { error } = await supabase\n      .from('events')\n      .delete()\n      .eq('id', id);\n\n    if (error) {\n      alert('Error deleting event');\n    } else {\n      setEvents(events.filter(event => event.id !== id));\n    }\n  };\n\n  const editEvent = (event) => {\n    setEditingEvent(event);\n    setStart(new Date(event.start));\n    setEnd(new Date(event.end));\n    setEventName(event.name);\n    setEventDescription(event.description);\n    setIsCreating(true); // Switch to edit mode\n  };\n\n  const updateEvent = async () => {\n    const updatedEvent = {\n      id: editingEvent.id,\n      name: eventName,\n      description: eventDescription,\n      start: start.toISOString(),\n      end: end.toISOString(),\n      user_id: session.user.id\n    };\n\n    const { data, error } = await supabase\n      .from('events')\n      .update(updatedEvent)\n      .eq('id', editingEvent.id);\n\n    if (error) {\n      alert('Error updating event');\n    } else {\n      setEvents(events.map((event) =>\n        event.id === editingEvent.id ? data[0] : event\n      ));\n      setEditingEvent(null);\n      setIsCreating(false);\n      resetForm();\n    }\n  };\n\n  const sortEvents = (sortBy) => {\n    const sortedEvents = [...events].sort((a, b) => {\n      if (sortBy === 'name') {\n        return a.name.localeCompare(b.name);\n      } else if (sortBy === 'date') {\n        return new Date(a.start) - new Date(b.start);\n      }\n      return 0;\n    });\n    setEvents(sortedEvents);\n  };\n\n  const resetForm = () => {\n    setStart(new Date());\n    setEnd(new Date());\n    setEventName('');\n    setEventDescription('');\n  };\n\n  if (isLoading) {\n    return <></>;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"card\">\n        {session ? (\n          <>\n            <h2>{session.user.email}</h2>\n            <div className=\"events-section\">\n              <h3>Upcoming Events</h3>\n              <div className=\"events-buttons\">\n                <button onClick={() => sortEvents('name')}>Sort by Name</button>\n                <button onClick={() => sortEvents('date')}>Sort by Date</button>\n                <button onClick={() => setIsCreating(true)}>Create Event</button>\n              </div>\n              <div className=\"event-list\">\n                {events.map(event => (\n                  <div key={event.id} className=\"event-card\">\n                    <h4>{event.name}</h4>\n                    <p>{event.description}</p>\n                    <p>{new Date(event.start).toLocaleString()} - {new Date(event.end).toLocaleString()}</p>\n                    <button onClick={() => editEvent(event)}>Edit</button>\n                    <button onClick={() => deleteEvent(event.id)}>Delete</button>\n                  </div>\n                ))}\n              </div>\n            </div>\n            {isCreating && (\n              <div className=\"create-event-form\">\n                <h3>{editingEvent ? \"Edit Event\" : \"Create Event\"}</h3>\n                <p>Start of your event</p>\n                <DateTimePicker onChange={setStart} value={start} />\n                <p>End of your event</p>\n                <DateTimePicker onChange={setEnd} value={end} />\n                <p>Event name</p>\n                <input type=\"text\" value={eventName} onChange={(e) => setEventName(e.target.value)} />\n                <p>Event Description</p>\n                <input type=\"text\" value={eventDescription} onChange={(e) => setEventDescription(e.target.value)} />\n                <p>Attendees (separate emails with commas)</p>\n                <input \n                  type=\"text\" \n                  value={attendeeEmails} \n                  onChange={(e) => setAttendeeEmails(e.target.value)} \n                />\n                <p></p>\n                <button onClick={editingEvent ? updateEvent : createEvent}>\n                  {editingEvent ? \"Update\" : \"Create\"}\n                </button>\n                <button onClick={() => setIsCreating(false)}>Cancel</button>\n              </div>\n            )}\n            <button onClick={signOut}>Sign Out</button>\n          </>\n        ) : (\n          <div>\n            <h2>Welcome!</h2>\n            <p>Please sign in with Google to continue</p>\n            <button onClick={googleSignIn}>Sign In with Google</button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  async function googleSignIn() {\n    const { error } = await supabase.auth.signInWithOAuth({\n      provider: 'google',\n      options: {\n        scopes: 'https://www.googleapis.com/auth/calendar',\n      },\n    });\n  \n    if (error) {\n      alert('Error logging into Google');\n      console.log(error);\n    }\n  }\n  \n  async function signOut() {\n    await supabase.auth.signOut();\n  }\n\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}